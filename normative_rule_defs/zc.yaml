---
# yaml-language-server: $schema=../docs-resources/schemas/defs-schema.json

$schema: "../docs-resources/schemas/defs-schema.json#"

# Used to create normative rules for rv32.adoc file.
# Tags refer to anchors in any adoc file for any ISA manual.

normative_rule_definitions:
  - name: rv32i_xreg_sz # Normative rule names are typically more compact than tag names since they appear in table cells
    summary: RV32I XLEN # Few word summary of normative rule.
    tags: ["norm:rv32i_xreg_sz"]
  - name: rv32i_other_xregs
    summary: Registers x1 to x31
    tags: ["norm:rv32i_rv64i_other_xregs"] # Same tag used in rv64.yaml (that chapter is written as deltas from this chapter)
  - name: pcreg_op
    description: | # Example where augmenting information in tags helps better define a normative rule
      The `pc` contains a byte address so is incremented by 4 for 32-bit instructions and
      2 for 16-bit instructions.
    tags: ["norm:pcreg_op"]
  - names: [slti_op, sltiu_op] # Example of multiple normative rules using the same tag
    tags: ["norm:slti_sltiu_op"]
  - name: x0eq0
    summary: Register x0 always zero
    tags: ["norm:x0eq0"]
  - name: taken_cti_misaligned_exc
    summary: CTI misaligned execution
    tags: ["norm:taken_cti_misaligned_exc"]
  - name: cond_br_no_ia_misaligned_exc_not_taken
    summary: No IA misaligned exc on not taken
    tags: ["norm:cond_br_no_ia_misaligned_exc_not_taken"]
  - name: imm_always_sex
    summary: Immediates always sign-extended
    tags: ["norm:imm_always_sex"]
  - name: addi_op
    tags: ["norm:addi_op"]
  - name: addi_overflow
    summary: Treatment of overflow
    tags: ["norm:addi_overflow"]
  - names: [andi_op, ori_op, xori_op]
    tags: ["norm:andi_ori_xori_op"]
  - name: slli_op
    tags: ["norm:slli_op"]
  - name: srli_op
    tags: ["norm:srli_op"]
  - name: srai_op
    tags: ["norm:srai_op"]
  - name: lui_op
    tags: ["norm:lui_op"]
  - name: auipc_op
    tags: ["norm:auipc_op"]
  - name: R-type_operands
    tags: ["norm:R-type_operands"]
  - name: add_op
    tags: ["norm:add_op"]
  - name: sub_op
    tags: ["norm:sub_op"]
  - names: [add_overflow, sub_overflow]
    tags: ["norm:add_sub_overflow"]
  - names: [slt_op, sltu_op]
    tags: ["norm:slt_sltu_op"]
  - names: [and_op, or_op, xor_op]
    tags: ["norm:and_or_xor_op"]
  - names: [sll_op, srl_op, sra_op]
    tags: ["norm:sll_srl_sra_op"]
  - name: no_cti_delay_slots
    tags: ["norm:no_cti_delay_slots"]
  - name: ia_fault_exc_on_target
    tags: ["norm:ia_fault_exc_on_target"]
  - name: jal_target
    tags: ["norm:jal_target"]
  - name: jal_op
    tags: ["norm:jal_op"]
  - name: jalr_target
    tags: ["norm:jalr_target"]
  - name: jalr_op
    tags: ["norm:jalr_op"]
  - name: br_target
    tags: ["norm:br_target"]
  - names: [beq_op, bne_op]
    tags: ["norm:beq_bne_op"]
  - names: [blt_op, bltu_op]
    tags: ["norm:blt_bltu_op"]
  - names: [bge_op, bgeu_op]
    tags: ["norm:bge_bgeu_op"]
  - name: load_exc_x0
    tags: ["norm:load_exc_x0"]
  - name: ENDIANNESS_LITTLE_OR_BIG
    tags: ["norm:ENDIANNESS_LITTLE_OR_BIG"]
  - name: ldst_endian_byte_invariant
    tags: ["norm:ldst_endian_byte_invariant"]
  - name: ldst_endian_byte_op
    tags: ["norm:ldst_endian_byte_op"]
  - name: ldst_little_endian_op
    tags: ["norm:ldst_little_endian_op"]
  - name: ldst_big_endian_op
    tags: ["norm:ldst_big_endian_op"]
  - name: ldst_ea
    tags: ["norm:ldst_ea"]
  - name: ldst_no_exc_aligned
    tags: ["norm:ldst_no_exc_aligned"]
  - name: load_op
    tags: ["norm:load_op"]
  - name: store_op
    tags: ["norm:store_op"]
  - name: lw_op
    tags: ["norm:lw_op"]
  - name: lh_op
    tags: ["norm:lh_op"]
  - name: lhu_op
    tags: ["norm:lhu_op"]
  - names: [lb_op]
    tags:
      - "norm:lb_lbu_op"
      - "norm:lh_op"
  - names: [lbu_op]
    tags:
      - "norm:lb_lbu_op"
      - "norm:lhu_op"
  - names: [sw_op, sh_op, sb_op]
    tags: ["norm:sw_sh_sb_op"]
  - name: MISALIGNED_LDST_EEI_DEPENDENT_BEHAVIOR
    tags: ["norm:MISALIGNED_LDST_EEI_DEPENDENT_BEHAVIOR"]
  - name: MISALIGNED_LDST_FULLY_HW_SUPPORTED
    tags: ["norm:MISALIGNED_LDST_FULLY_HW_SUPPORTED"]
  - name: MISALIGNED_LDST_INVISIBLE_TRAP
    tags: ["norm:MISALIGNED_LDST_INVISIBLE_TRAP"]
  - name: MISALIGNED_LDST_HW_OR_INVISIBLE_TRAP_FUNC_OF_ADDR
    tags: ["norm:MISALIGNED_LDST_HW_OR_INVISIBLE_TRAP_FUNC_OF_ADDR"]
  - name: MISALIGNED_LDST_FULLY_HW_SUPPORTED_OR_VISIBLE_TRAP
    tags: ["norm:MISALIGNED_LDST_FULLY_HW_SUPPORTED_OR_VISIBLE_TRAP"]
  - name: MISALIGNED_LDST_CONTAINED_OR_FATAL_TRAP
    tags: ["norm:MISALIGNED_LDST_CONTAINED_OR_FATAL_TRAP"]
  - name: ldst_addr_misaligned_or_access_fault_exc
    tags: ["norm:ldst_addr_misaligned_or_access_fault_exc"]
  - name: ldst_atomicity_for_aligned
    tags: ["norm:ldst_atomicity_for_aligned"]
  - name: fence_op
    tags: ["norm:fence_op"]
  - name: fence-tso_op
    tags: ["norm:fence-tso_op"]
  - name: fence-tso_ordering_rw_rw_ok
    tags: ["norm:fence-tso_ordering_rw_rw_ok"]
  - name: fence_unused_flds_rsv
    tags: ["norm:fence_unused_flds_rsv"]
  - name: fence_cons_ok
    tags: ["norm:fence_cons_ok"]
  - name: ecall_op
    tags: ["norm:ecall_op"]
  - name: ebreak_op
    tags: ["norm:ebreak_op"]
  - name: fence_null_pred_succ_inter
    tags: ["norm:fence_null_pred_succ_inter"]
